@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation

<AuthorizeView>
    <Authorized>
        <MudMenu FullWidth="false" AnchorOrigin="Origin.BottomCenter" TransformOrigin="@(breakpointListener_SmAndDown ? Origin.TopRight : Origin.TopCenter)" Dense="true">
            <ActivatorContent>
                <MudChip Icon="@Icons.Material.Filled.Person" Color="Color.Primary">@(breakpointListener_SmAndDown ? string.Empty : context.User.Identity?.Name)</MudChip>
            </ActivatorContent>

            <ChildContent>
                    <MudMenuItem IconSize="Size.Small" Icon="@Icons.Material.Filled.Person" Href="authentication/profile">Profile</MudMenuItem>
                @if (MenuItems != null)
                {
                    <MudDivider />
                    @MenuItems
                }
                    <MudDivider />
                <MudMenuItem IconSize="Size.Small" IconColor="Color.Error" Icon="@Icons.Material.Filled.Logout" OnClick="BeginSignOut" OnTouch="BeginSignOut">Sign Out</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudButton Href="authentication/register" Variant="Variant.Filled" Color="Color.Primary">Register</MudButton>
        <MudButton Href="authentication/login" Variant="Variant.Outlined" Color="Color.Primary">Log in</MudButton>
    </NotAuthorized>
</AuthorizeView>

<MudHidden @bind-IsHidden="@breakpointListener_SmAndDown" Breakpoint="Breakpoint.SmAndDown" />

@code
{
    [Parameter]
    public RenderFragment? MenuItems { get; set; }

    private bool breakpointListener_SmAndDown;

    private void BeginSignOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }
}
